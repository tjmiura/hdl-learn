Verilog習作 ナイトライダー

「Verilog ナイトライダー」で検索すると、出てくるのはバイナリカウンタで一往復分カウントして出力をデコードしているものばかり。リングカウンタにしている例が見つからない。なぜ？

仮説
a) 単にアルゴリズムとして考えるのが楽だった
	こっちが濃厚なのだろうな。
	HDLコンパイラが意味レベルを超えて最適化してくれるなんてことはないだろうし。
b) 実はマクロセルの使用数が違う
	十分縮約すれば変わらないはずだ。
c) unfilled code counterは空き状態の管理が面倒
	そこまで考えてなさそうだが。

大抵の構造
  プリスケーラ → 二進カウンタ → デコーダ
  プリスケーラ部分は変わらないので省略
  二進カウンタはbit数ぶん使う。
  デコーダは理想的には出力のランプの数だけ、か。
    入力が足りなくなると二乗で増えそうな気はするが。

大抵の構造2
  片道分のデコーダとアップダウン二進カウンタってのもあった。

考えた構造
  プリスケーラ → アップダウンリングカウンタ + 方向切換器
    端のbitが1になったら次のクロックでカウント方向を切り替える。

